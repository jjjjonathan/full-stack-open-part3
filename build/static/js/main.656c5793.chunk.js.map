{"version":3,"sources":["services/persons.js","components/Numbers.js","components/Filter.js","components/Add.js","components/Notification.js","App.js","index.js"],"names":["url","axios","get","newObject","post","id","delete","objectToUpdate","put","Numbers","persons","query","onDeleteClick","filteredPersons","filter","person","name","toLowerCase","includes","map","number","type","onClick","Filter","onChange","value","Add","onFormSubmit","newName","newNumber","onNameChange","onNumberChange","onSubmit","Notification","style","message","isError","color","App","useState","setPersons","setNewName","setNewNumber","setQuery","setMessage","msgIsError","setMsgIsError","successMessage","text","setTimeout","useEffect","personsService","then","response","data","event","target","preventDefault","window","confirm","oldEntry","find","updatedEntry","catch","newEntry","Math","round","random","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.656c5793.chunk.js","sourcesContent":["import axios from \"axios\";\nconst url = \"/api/persons\";\n\nconst getAll = () => {\n  return axios.get(url);\n};\n\nconst create = (newObject) => {\n  return axios.post(url, newObject);\n};\n\nconst deleteEntry = (id) => {\n  return axios.delete(`${url}/${id}`);\n};\n\nconst put = (objectToUpdate) => {\n  return axios.put(`${url}/${objectToUpdate.id}`, objectToUpdate);\n};\n\n// eslint-disable-next-line\nexport default { getAll, create, deleteEntry, put };\n","import React from \"react\";\n\nconst Numbers = ({ persons, query, onDeleteClick }) => {\n  const filteredPersons = query\n    ? persons.filter((person) => {\n        return person.name.toLowerCase().includes(query.toLowerCase());\n      })\n    : persons;\n\n  return (\n    <ul>\n      {filteredPersons.map((person) => (\n        <li key={person.id}>\n          {person.name} {person.number}{\" \"}\n          <button type=\"button\" onClick={() => onDeleteClick(person.id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Numbers;\n","import React from \"react\";\n\nconst Filter = ({ query, onChange }) => {\n  return (\n    <div>\n      filter: <input value={query} onChange={onChange} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst Add = ({\n  onFormSubmit,\n  newName,\n  newNumber,\n  onNameChange,\n  onNumberChange,\n}) => {\n  return (\n    <form onSubmit={onFormSubmit}>\n      <div>\n        name: <input value={newName} onChange={onNameChange} />\n      </div>\n      <div>\n        number: <input value={newNumber} onChange={onNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Add;\n","import React from \"react\";\n\nconst Notification = ({ message, isError }) => {\n  let style;\n  if (isError) {\n    style = { color: \"Red\" };\n  } else {\n    style = { color: \"Green\" };\n  }\n\n  return (\n    <div style={style}>\n      <p>{message}</p>\n    </div>\n  );\n};\n\nexport default Notification;\n","import React, { useEffect, useState } from \"react\";\nimport personsService from \"./services/persons\";\nimport Numbers from \"./components/Numbers\";\nimport Filter from \"./components/Filter\";\nimport Add from \"./components/Add\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [msgIsError, setMsgIsError] = useState(false);\n\n  const successMessage = (text) => {\n    setMessage(text);\n    setMsgIsError(false);\n    setTimeout(() => {\n      setMessage(\"\");\n    }, 3000);\n  };\n\n  const errorMessage = (text) => {\n    setMessage(text);\n    setMsgIsError(true);\n    setTimeout(() => {\n      setMessage(\"\");\n    }, 3000);\n  };\n\n  const handleNameInput = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberInput = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleQueryInput = (event) => {\n    setQuery(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (persons.map((person) => person.name).includes(newName)) {\n      if (\n        window.confirm(\n          `${newName} is already added to the phonebook, would you like to replace old number with new one?`\n        )\n      ) {\n        const oldEntry = persons.find((person) => person.name === newName);\n        const updatedEntry = { ...oldEntry, number: newNumber };\n\n        personsService\n          .put(updatedEntry)\n          .then(() => {\n            successMessage(`Successfully updated number for ${newName}!`);\n          })\n          .catch(() => {\n            errorMessage(\n              `${newName} has already been removed from the phonebook. Please refresh the page`\n            );\n          });\n\n        setPersons(\n          persons.map((person) => {\n            return person.id === updatedEntry.id ? updatedEntry : person;\n          })\n        );\n\n        setNewName(\"\");\n        setNewNumber(\"\");\n      }\n    } else {\n      const newEntry = {\n        name: newName,\n        number: newNumber,\n        id: Math.round(Math.random() * 10000000000),\n      };\n      personsService.create(newEntry).then((response) => {\n        setPersons([...persons, newEntry]);\n        successMessage(`Successfully added ${newName} to phonebook!`);\n      });\n\n      setNewName(\"\");\n      setNewNumber(\"\");\n    }\n  };\n\n  const handleDelete = (id) => {\n    if (\n      window.confirm(\n        `Delete ${persons.find((person) => person.id === id).name}?`\n      )\n    ) {\n      personsService.deleteEntry(id);\n      setPersons(persons.filter((person) => person.id !== id));\n      successMessage(\n        `Successfully deleted ${\n          persons.find((person) => person.id === id).name\n        } from phonebook`\n      );\n    }\n  };\n\n  useEffect(() => {\n    personsService.getAll().then((response) => {\n      setPersons(response.data);\n    });\n  }, []);\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={message} isError={msgIsError} />\n      <Filter query={query} onChange={handleQueryInput} />\n      <h2>add new</h2>\n      <Add\n        onFormSubmit={handleSubmit}\n        newName={newName}\n        newNumber={newNumber}\n        onNameChange={handleNameInput}\n        onNumberChange={handleNumberInput}\n      />\n\n      <h2>Numbers</h2>\n      <Numbers persons={persons} query={query} onDeleteClick={handleDelete} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}